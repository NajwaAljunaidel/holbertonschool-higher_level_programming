Module: 0-add_integer
=====================

Function: add_integer(a, b=98)
------------------------------

Description:
------------
This function adds two numbers. It accepts integers and floats,
but both values are cast to integers before performing the addition.
If a non-numeric value is passed, the function raises a TypeError.
Special float values like NaN or infinity will raise errors as well.

Usage Examples:
---------------

>>> add_integer = __import__('0-add_integer').add_integer

Basic addition:
>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

Float values are cast to integers:
>>> add_integer(4, 5.6)
9

>>> add_integer(3.5, 2)
5

Handling invalid input types:
>>> add_integer(4, "School")
Traceback (most recent call last):
    ...
TypeError: b must be an integer

>>> add_integer("Hello", 5)
Traceback (most recent call last):
    ...
TypeError: a must be an integer

Edge case: special float values:
>>> add_integer(float('inf'), 1)
Traceback (most recent call last):
    ...
OverflowError: cannot convert float infinity to integer

>>> add_integer(float('nan'), 1)
Traceback (most recent call last):
    ...
ValueError: cannot convert float NaN to integer

Using default value for b:
>>> add_integer(5)
103

>>> add_integer(5, 3)
8

Missing all arguments:
>>> add_integer()
Traceback (most recent call last):
    ...
TypeError: add_integer() missing 1 required positional argument: 'a'

